{"version":3,"sources":["AppContext.js","Yes.js","Nope.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","AppProvider","props","_useState","useState","_useState2","Object","slicedToArray","mathProblem","setMathProblem","_useState3","_useState4","answer","setAnswer","randomNumber","Math","floor","random","generateMathProblem","num1","temp","num2","concat","useEffect","react_default","a","createElement","Provider","value","children","gifs","Yes","gif","setGif","x","length","src","height","width","alt","Gify","Container","styled","div","_templateObject","Side","_templateObject2","Left","_templateObject3","keydown","Right","_templateObject4","MathContainer","_templateObject5","Display","h1","_templateObject6","MathProblem","_templateObject7","Time","_templateObject8","Content","_useContext","useContext","leftDown","setLeftDown","leftTimer","setLeftTimer","_useState5","_useState6","rightDown","setRightDown","_useState7","_useState8","rightTimer","setRightTimer","leftTimeStart","rightTimeStart","leftDone","rightDone","toggleTimer","timer","now","Date","getTime","handleKeyDown","event","keyCode","handleKeyUp","window","addEventListener","src_Yes","Nope","App","AppContext_AppProvider","src_Content","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3d0d755.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nconst MAX_VALUE = 21\n\nconst AppContext = createContext()\n\nconst AppProvider = props => {\n  const [mathProblem, setMathProblem] = useState(null)\n  const [answer, setAnswer] = useState(null)\n\n  const randomNumber = () => {\n    return Math.floor(Math.random() * MAX_VALUE + 1)\n  }\n\n  const generateMathProblem = () => {\n    let num1 = randomNumber()\n    let temp = randomNumber()\n    while (temp === num1) {\n      temp = randomNumber()\n    }\n    const answer = num1 > temp ? num1 : temp\n    num1 = num1 > temp ? temp : num1\n    const num2 = answer - num1\n    setMathProblem(`${num1} + ${num2}`)\n    setAnswer(answer)\n  }\n\n  // do on initial load only\n  useEffect(() => {\n    generateMathProblem()\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ answer, mathProblem, generateMathProblem }}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport { AppContext, AppProvider }\n","import React, { useEffect, useState } from 'react'\n\nconst gifs = [\n  'Wp5CIL0eQj8D6',\n  '1ZostJS3YDb34j0D7s',\n  'pOTEhtq8Jv7voNl7mb',\n  'W6aQJOobbZ8BboYFY4',\n  '1oInQF9RIwD1VXe8Ha',\n  'u47vUoXTLfLCWP7bt4',\n  '2YpXAHspGxLszFs25W',\n  '5vidmYpnogEo8chJcx',\n  'l4pTfLGPVb6KM3jmU',\n  'jVTEgn7a5nkvGn3069',\n  'iEbPnIPyh9Exq',\n  '4NWT0Ry3dtTLW',\n  '3oFzmcl7D4fv7BSW4w',\n  'bg283WKwSbH3i',\n  'Jlys8jzFoI8ne',\n  'JoaeMGYYkHpC',\n  '3ohs7WhawOVfLMJ14c',\n  '3ohs4C4pHiR4xE70qc'\n]\n\nconst Yes = props => {\n  const randomGif = () => {\n    return gifs[Math.floor(Math.random() * gifs.length)]\n  }\n  const [gif, setGif] = useState(null)\n\n  useEffect(() => {\n    const x = randomGif()\n    setGif(`https://i.giphy.com/media/${x}/giphy.webp`)\n  }, [])\n\n  return <img src={gif} height=\"450\" width=\"450\" alt=\"unicorn poop\" />\n}\n\nexport default Yes\n","import React, { useEffect, useState } from 'react'\n\nconst gifs = ['26xBIgTMTE5b3Ware', 'XwnxEG9365aMw', 'l378nu4kJajdfCvUk']\n\nconst Gify = props => {\n  const randomGif = () => {\n    return gifs[Math.floor(Math.random() * gifs.length)]\n  }\n  const [gif, setGif] = useState(null)\n\n  useEffect(() => {\n    const x = randomGif()\n    setGif(`https://i.giphy.com/media/${x}/giphy.webp`)\n  }, [])\n\n  return <img src={gif} height=\"450\" width=\"450\" alt=\"nope\" />\n}\n\nexport default Gify\n","import React, { useState, useEffect, useContext } from 'react'\nimport styled from 'styled-components'\nimport Yes from './Yes'\nimport Nope from './Nope'\nimport { AppContext } from './AppContext'\n\nconst SPACE_KEY = 32\nconst RIGHT_QUESTION_KEY = 191\nconst LEFT_Z_KEY = 90\n\nconst Container = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n`\n\nconst Side = styled.div`\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nconst Left = styled(Side)`\n  background-color: ${props =>\n    props.keydown ? 'rgba(253, 121, 168, 1.0)' : 'rgba(253, 121, 168, 0.5)'};\n`\n\nconst Right = styled(Side)`\n  background-color: ${props =>\n    props.keydown ? 'rgba(108, 92, 231, 1.0)' : 'rgba(108, 92, 231, 0.5)'};\n`\n\nconst MathContainer = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Display = styled.h1`\n  color: white;\n  padding: 30px;\n  text-align: center;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 0.7);\n`\n\nconst MathProblem = styled(Display)`\n  min-width: 150px;\n`\n\nconst Time = styled(Display)`\n  font-size: 5em;\n`\n\nconst Content = props => {\n  const { answer, mathProblem, generateMathProblem } = useContext(AppContext)\n\n  // sides have 3 states\n  // not pressed = 0\n  // down = 1\n  // up = 2\n  const [leftDown, setLeftDown] = useState(0)\n  const [leftTimer, setLeftTimer] = useState(0)\n\n  const [rightDown, setRightDown] = useState(0)\n  const [rightTimer, setRightTimer] = useState(0)\n\n  let leftTimeStart = 0,\n    rightTimeStart = 0,\n    leftDone = 0,\n    rightDone = 0\n\n  const toggleTimer = (timer, value) => {\n    const now = new Date().getTime()\n    // start timer\n    if (value === 1) {\n      if (timer === 'left' && !leftTimeStart) leftTimeStart = now\n      else if (timer === 'right' && !rightTimeStart) rightTimeStart = now\n    } else {\n      //end timer\n      if (timer === 'left') {\n        setLeftTimer(Math.floor((now - leftTimeStart) / 1000))\n        leftDone = 1\n      } else {\n        setRightTimer(Math.floor((now - rightTimeStart) / 1000))\n        rightDone = 1\n      }\n    }\n  }\n\n  const reset = () => {\n    setLeftDown(0)\n    setLeftTimer(0)\n    setRightDown(0)\n    setRightTimer(0)\n    leftTimeStart = 0\n    rightTimeStart = 0\n    leftDone = 0\n    rightDone = 0\n  }\n\n  const handleKeyDown = event => {\n    switch (event.keyCode) {\n      case SPACE_KEY:\n        generateMathProblem()\n        reset()\n        break\n      case LEFT_Z_KEY:\n        if (!leftTimeStart) {\n          toggleTimer('left', 1)\n          setLeftDown(1)\n        }\n        break\n      case RIGHT_QUESTION_KEY:\n        if (!rightTimeStart) {\n          toggleTimer('right', 1)\n          setRightDown(1)\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  const handleKeyUp = event => {\n    switch (event.keyCode) {\n      case LEFT_Z_KEY:\n        if (!leftDone) {\n          setLeftDown(2)\n          toggleTimer('left', 0)\n        }\n        break\n      case RIGHT_QUESTION_KEY:\n        if (!rightDone) {\n          setRightDown(2)\n          toggleTimer('right', 0)\n        }\n        break\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n  }, [])\n\n  return (\n    <Container>\n      <Left keydown={leftDown === 1 ? 1 : 0}>\n        {leftDown === 2 ? <Time>{leftTimer}</Time> : null}\n\n        {leftDown === 2 ? leftTimer === answer ? <Yes /> : <Nope /> : null}\n      </Left>\n      <Right keydown={rightDown === 1 ? 1 : 0}>\n        {rightDown === 2 ? <Time>{rightTimer}</Time> : null}\n        {rightDown === 2 ? rightTimer === answer ? <Yes /> : <Nope /> : null}\n      </Right>\n      <MathContainer>\n        <MathProblem>{mathProblem}</MathProblem>\n      </MathContainer>\n    </Container>\n  )\n}\n\nexport default Content\n","import React, { Component } from 'react'\nimport { AppProvider } from './AppContext'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider>\n        <Content />\n      </AppProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}