{"version":3,"sources":["AppContext.js","Yes.js","Nope.js","StartOver.js","Content.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","AppProvider","props","_useState","useState","_useState2","Object","slicedToArray","mathProblem","setMathProblem","_useState3","_useState4","answer","setAnswer","randomNumber","Math","floor","random","generateMathProblem","num1","temp","num2","concat","useEffect","react_default","a","createElement","Provider","value","children","gifs","Container","styled","div","_templateObject","Yes","gif","setGif","x","length","src","alt","Nope_templateObject","Gify","Nope_Container","StartOver_templateObject","StartOver","StartOver_Container","Content_templateObject","Side","_templateObject2","Left","_templateObject3","Right","_templateObject4","MathContainer","_templateObject5","StartOverContainer","_templateObject6","Display","h1","_templateObject7","MathProblem","_templateObject8","Time","_templateObject9","Content","_useContext","useContext","leftDown","setLeftDown","leftTimer","setLeftTimer","_useState5","_useState6","leftTimerStarted","setLeftTimerStarted","_useState7","_useState8","rightDown","setRightDown","_useState9","_useState10","rightTimer","setRightTimer","_useState11","_useState12","rightTimerStarted","setRightTimerStarted","leftDone","rightDone","toggleTimer","timer","now","Date","getTime","handleDown","side","handleUp","startOver","handleKeyDown","event","keyCode","handleKeyUp","setBackGroundColor","colors","wrong","correct","down","rest","i","window","addEventListener","removeEventListener","Content_Container","className","keydown","style","backgroundColor","onTouchStart","onTouchEnd","src_Yes","Nope","onClick","src_StartOver","App","AppContext_AppProvider","src_Content","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70c64579.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\n\nconst MAX_VALUE = 20\n\nconst AppContext = createContext()\n\nconst AppProvider = props => {\n  const [mathProblem, setMathProblem] = useState(null)\n  const [answer, setAnswer] = useState(null)\n\n  const randomNumber = () => {\n    return Math.floor(Math.random() * MAX_VALUE + 1)\n  }\n\n  const generateMathProblem = () => {\n    let num1 = randomNumber()\n    let temp = randomNumber()\n    while (temp === num1) {\n      temp = randomNumber()\n    }\n    const answer = num1 > temp ? num1 : temp\n    num1 = num1 > temp ? temp : num1\n    const num2 = answer - num1\n    setMathProblem(`${num1} + ${num2}`)\n    setAnswer(answer)\n  }\n\n  // do on initial load only\n  useEffect(() => {\n    generateMathProblem()\n  }, [])\n\n  return (\n    <AppContext.Provider value={{ answer, mathProblem, generateMathProblem }}>\n      {props.children}\n    </AppContext.Provider>\n  )\n}\n\nexport { AppContext, AppProvider }\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst gifs = [\n  'Wp5CIL0eQj8D6',\n  '1ZostJS3YDb34j0D7s',\n  'pOTEhtq8Jv7voNl7mb',\n  'W6aQJOobbZ8BboYFY4',\n  '1oInQF9RIwD1VXe8Ha',\n  'u47vUoXTLfLCWP7bt4',\n  '2YpXAHspGxLszFs25W',\n  '5vidmYpnogEo8chJcx',\n  'l4pTfLGPVb6KM3jmU',\n  'jVTEgn7a5nkvGn3069',\n  'iEbPnIPyh9Exq',\n  '4NWT0Ry3dtTLW',\n  '3oFzmcl7D4fv7BSW4w',\n  'bg283WKwSbH3i',\n  'Jlys8jzFoI8ne',\n  'JoaeMGYYkHpC',\n  '3ohs7WhawOVfLMJ14c',\n  '3ohs4C4pHiR4xE70qc',\n  '1d9qTol1d5xZCTkwIA',\n  'ygx4FycuFuEnl5lpwh'\n]\n\nconst Container = styled.div`\n  @media (min-width: 48em) {\n    width: 450px;\n  }\n  @media (max-width: 48em) {\n    width: 50vw;\n  }\n\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`\n\nconst Yes = props => {\n  const randomGif = () => {\n    return gifs[Math.floor(Math.random() * gifs.length)]\n  }\n  const [gif, setGif] = useState(null)\n\n  useEffect(() => {\n    const x = randomGif()\n    setGif(`https://i.giphy.com/media/${x}/giphy.webp`)\n  }, [])\n\n  return (\n    <Container>\n      <img src={gif} alt=\"nope\" />\n    </Container>\n  )\n}\n\nexport default Yes\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nconst gifs = [\n  '26xBIgTMTE5b3Ware',\n  'XwnxEG9365aMw',\n  'l378nu4kJajdfCvUk',\n  'mcsE75zh9etKE',\n  '3o7aCYje2hvVsaTpio',\n  'QObQirfaL3arJiKxeW',\n  '3pZ9PhkJxEiMQPS5lm',\n  'llXSgLPOy6DfCNcJDp',\n  '4KFwpiwm1JYEZi5Gsq',\n  '28j6GjBumA7ZKmaKI9',\n  '9oICl27yHGp3wAXUW6',\n  '3d6WSrv3PbyZq1vdjC'\n]\n\nconst Container = styled.div`\n  @media (min-width: 48em) {\n    width: 450px;\n  }\n  @media (max-width: 48em) {\n    width: 50vw;\n  }\n\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`\n\nconst Gify = props => {\n  const randomGif = () => {\n    return gifs[Math.floor(Math.random() * gifs.length)]\n  }\n  const [gif, setGif] = useState(null)\n\n  useEffect(() => {\n    const x = randomGif()\n    setGif(`https://i.giphy.com/media/${x}/giphy.webp`)\n  }, [])\n\n  return (\n    <Container>\n      <img src={gif} alt=\"nope\" />\n    </Container>\n  )\n}\n\nexport default Gify\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 50px;\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n`\n\nconst StartOver = props => {\n  return (\n    <Container>\n      <img src=\"https://i.giphy.com/media/2wY28XHCbVrgwS5wEr/giphy.webp\" alt=\"start over\" />\n    </Container>\n  )\n}\n\nexport default StartOver\n","import React, { useState, useEffect, useContext } from 'react'\nimport styled from 'styled-components'\nimport Yes from './Yes'\nimport Nope from './Nope'\nimport StartOver from './StartOver'\n\nimport { AppContext } from './AppContext'\n\nconst SPACE_KEY = 32\nconst RIGHT_QUESTION_KEY = 191\nconst LEFT_Z_KEY = 90\n\nconst Container = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n`\n\nconst Side = styled.div`\n  flex: 1;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  position: relative;\n`\n\nconst Left = styled(Side)``\n\nconst Right = styled(Side)``\n\nconst MathContainer = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (min-width: 48em) {\n    top: 50px;\n  }\n  @media (max-width: 48em) {\n    top: 30px;\n  }\n`\n\nconst StartOverContainer = styled.div`\n  position: absolute;\n  left: 10px;\n  top: 10px;\n  @media (min-width: 48em) {\n    display: none;\n  }\n`\n\nconst Display = styled.h1`\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n  background-color: rgba(0, 0, 0, 0.7);\n  @media (min-width: 48em) {\n    padding: 30px;\n  }\n  @media (max-width: 48em) {\n    padding: 10px;\n  }\n`\n\nconst MathProblem = styled(Display)`\n  @media (min-width: 48em) {\n    min-width: 150px;\n  }\n`\n\nconst Time = styled(Display)`\n  position: absolute;\n  @media (min-width: 48em) {\n    top: 150px;\n    font-size: 5em;\n  }\n  @media (max-width: 48em) {\n    top: 100px;\n    font-size: 3em;\n  }\n`\n\nconst Content = props => {\n  const { answer, mathProblem, generateMathProblem } = useContext(AppContext)\n\n  // sides have 3 states\n  // not pressed = 0\n  // down = 1\n  // up = 2\n  const [leftDown, setLeftDown] = useState(0)\n  const [leftTimer, setLeftTimer] = useState(0)\n  const [leftTimerStarted, setLeftTimerStarted] = useState(0)\n\n  const [rightDown, setRightDown] = useState(0)\n  const [rightTimer, setRightTimer] = useState(0)\n  const [rightTimerStarted, setRightTimerStarted] = useState(0)\n\n  let leftDone = 0,\n    rightDone = 0\n\n  const toggleTimer = (timer, value) => {\n    const now = new Date().getTime()\n    if (value === 1) {\n      // console.log('timer start', now, leftTimerStarted)\n      // start timer\n      if (timer === 'left' && leftTimerStarted === 0) {\n        setLeftTimerStarted(now)\n        // console.log('leftTimerStarted', leftTimerStarted, now)\n      } else if (timer === 'right' && !rightTimerStarted) {\n        setRightTimerStarted(now)\n      }\n    } else {\n      //end timer\n      if (timer === 'left') {\n        // console.log('timer end', now, leftTimerStarted)\n        setLeftTimer(Math.floor((now - leftTimerStarted) / 1000))\n        leftDone = 1\n      } else {\n        setRightTimer(Math.floor((now - rightTimerStarted) / 1000))\n        rightDone = 1\n      }\n    }\n  }\n\n  const reset = () => {\n    setLeftDown(0)\n    setLeftTimer(0)\n    setRightDown(0)\n    setRightTimer(0)\n    leftDone = 0\n    rightDone = 0\n    setLeftTimerStarted(0)\n    setRightTimerStarted(0)\n  }\n\n  const handleDown = side => {\n    if (side === 'left') {\n      if (!leftTimerStarted) {\n        toggleTimer(side, 1)\n        setLeftDown(1)\n      }\n    } else {\n      if (!rightTimerStarted) {\n        toggleTimer(side, 1)\n        setRightDown(1)\n      }\n    }\n  }\n\n  const handleUp = side => {\n    if (side === 'left') {\n      if (!leftDone) {\n        setLeftDown(2)\n        toggleTimer(side, 0)\n      }\n    } else {\n      if (!rightDone) {\n        setRightDown(2)\n        toggleTimer(side, 0)\n      }\n    }\n  }\n  const startOver = () => {\n    reset()\n    generateMathProblem()\n  }\n  const handleKeyDown = event => {\n    switch (event.keyCode) {\n      case SPACE_KEY:\n        startOver()\n        break\n      case LEFT_Z_KEY:\n        handleDown('left')\n        break\n      case RIGHT_QUESTION_KEY:\n        handleDown('right')\n        break\n      default:\n        break\n    }\n  }\n\n  const handleKeyUp = event => {\n    switch (event.keyCode) {\n      case LEFT_Z_KEY:\n        handleUp('left')\n        break\n      case RIGHT_QUESTION_KEY:\n        handleUp('right')\n        break\n      default:\n        break\n    }\n  }\n\n  const setBackGroundColor = side => {\n    const colors = {\n      wrong: ['#b2bec3', '#dfe6e9'],\n      correct: ['#00b894', '#55efc4'],\n      down: ['rgba(253, 121, 168, 1.0)', 'rgba(108, 92, 231, 1.0)'],\n      rest: ['rgba(232, 67, 147,1.0)', 'rgba(108, 92, 231, 0.5)']\n    }\n\n    const i = side === 'left' ? 0 : 1\n    if (side === 'left') {\n      if (leftDown === 2 && leftTimer !== answer) return colors.wrong[i]\n      else if (leftDown === 2 && leftTimer === answer) return colors.correct[i]\n      else if (leftDown === 1) return colors.down[i]\n      else return colors.rest[i]\n    } else {\n      if (rightDown === 2 && rightTimer !== answer) return colors.wrong[i]\n      else if (rightDown === 2 && rightTimer === answer) return colors.correct[i]\n      else if (rightDown === 1) return colors.down[i]\n      else return colors.rest[i]\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [])\n\n  return (\n    <Container>\n      <Left\n        className=\"side\"\n        keydown={leftDown === 1 ? 1 : 0}\n        wrong={leftTimer && leftTimer !== answer}\n        correct={leftTimer && leftTimer === answer}\n        style={{ backgroundColor: setBackGroundColor('left') }}\n        onTouchStart={() => handleDown('left')}\n        onTouchEnd={() => handleUp('left')}\n      >\n        {leftDown === 2 ? <Time>{leftTimer}</Time> : null}\n        {leftDown === 2 ? leftTimer === answer ? <Yes /> : <Nope /> : null}\n      </Left>\n\n      <Right\n        className=\"side\"\n        keydown={rightDown === 1 ? 1 : 0}\n        style={{ backgroundColor: setBackGroundColor('right') }}\n        onTouchStart={() => handleDown('right')}\n        onTouchEnd={() => handleUp('right')}\n      >\n        {rightDown === 2 ? <Time>{rightTimer}</Time> : null}\n        {rightDown === 2 ? rightTimer === answer ? <Yes /> : <Nope /> : null}\n      </Right>\n\n      <MathContainer>\n        <MathProblem>{mathProblem}</MathProblem>\n      </MathContainer>\n      <StartOverContainer onClick={startOver}>\n        <StartOver />\n      </StartOverContainer>\n    </Container>\n  )\n}\n\nexport default Content\n","import React, { Component } from 'react'\nimport { AppProvider } from './AppContext'\nimport Content from './Content'\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider>\n        <Content />\n      </AppProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}